barcolor="#CC9933",textcolor = "#CC9933")
p_circ
ggsave("desj_tree_lineages_labels_circular.pdf", width = 12, height = 12)
#| output: false
library(tidyverse)
penguins <- read_csv("~/Bio724/penguins.csv")
# read spellman TSV data
spellman <- read_tsv("~/Bio724/spellman-1998-expression.tsv")
# examine dimension, names, etc
dim(spellman)
names(spellman)
# read first six columns of data file
spellman_6 <- read_tsv("~/Bio724/spellman-1998-expression.tsv",
col_select = 1:6)
# read first six columns of data file
spellman_alpha<- read_tsv("~/Bio724/spellman-1998-expression.tsv",
col_select = c(1, starts_with("alpha")))
head(spellman_alpha)
#| output: false
# this will generate an error
tecan <- read_tsv("~/Bio724/cryptococcus_tecan_run.txt")
# fix the error by specifying the correct encoding using the local argument
# also tell read_tsv there are no col_names
tecan <- read_tsv("~/Bio724/cryptococcus_tecan_run.txt",
locale = locale(encoding = "windows-1252"),
col_names = FALSE)
problems(tecan)
# use read_excel to extract the low expression table
# from Nagalakshmi Supp Table 2
library(readxl)
low <- read_excel("~/Bio724/Nagalakshmi_et_al_2008_TableS2.xls",
sheet = "Low",
range = "A5:G235")
# get only species and "bill" columns from penguin data
penguins |>
select(species, bill_length_mm, bill_depth_mm) |>
head()
# get everything except "bill" columns from penguins
penguins |>
select(species, !bill_length_mm, !bill_depth_mm) |>
head()
# get numeric columns from penguin data
penguins |>
select(where(is.numeric)) |>
head()
# get all the "length" columns from penguins
penguins |>
select(matches("length")) |>
head()
# create a derived column, body_mass_kg, in penguins
penguins |>
mutate(body_mass_kg = body_mass_g / 1000) |>
head()
# get only the rows representing Gentoo penguins
penguins |>
filter(species == "Gentoo")
# exclude the rows that are Gentoo penguins
penguins |>
filter(species != "Gentoo")
# get the Gentoo penguins bigger than 4.5 kg
penguins |>
filter(species == "Gentoo", body_mass_g > 4500)
# get both Gentoo and Adelie penguins using the OR operator
penguins |>
filter(species == "Gentoo" | species == "Adelie" )
# Get Gentoo and Adelie penguins using the %in% operator
penguins |>
filter(species %in% c("Gentoo","Adelie") )
# find rows where body_mass_g has NA values
penguins |>
filter(where(is.na(body_mass_g)))
# find rows where body_mass_g has NA values
penguins |>
filter(is.na(body_mass_g))
# get all rows where body_mass data is NOT missing
penguins |>
filter(!is.na(body_mass_g))
# drop any rows where body_mass_g is missing using drop_na
penguins |>
drop_na(body_mass_g)
# drop rows where any variable has an NA value
penguins |>
drop_na()
# sort penguins by bill_length_mm
penguins |>
arrange(bill_length_mm)
# sort penguins by bill_length_mm from biggest to smallest
penguins |>
arrange(desc(bill_length_mm))
# sort penguins by flipper_length and  bill_length
penguins |>
arrange(flipper_length_mm, bill_length_mm)
penguins[1, 1]  # row 1, col 1
penguins[1:5, 1:3]  # rows 1 to 5, columns 1 to 3
penguins[1:4]
penguins[c("species", "island", "body_mass_g", "sex")]
penguins$body_mass_g |>
head(50)
penguins[c("body_mass_g")] |>
head(50)
install.packages("ggdist")
install.packages("ggtext")
install.packages("patchwork")
library(ggplot2)
library(ggdist) # nice distributional plots
library(ggtext) # useful for text formatting
library(patchwork) # laying out sub-figures
library(palmerpenguins)  # easy access to the penguins data
library(ggplot2)
library(ggdist) # nice distributional plots
library(ggtext) # useful for text formatting
library(patchwork) # laying out sub-figures
library(RColorBrewer)
library(palmerpenguins)  # easy access to the penguins data
library(ggplot2)
library(ggdist) # nice distributional plots
library(ggtext) # useful for text formatting
library(patchwork) # laying out sub-figures
library(RColorBrewer)
library(palmerpenguins)  # easy access to the penguins data
View(penguins)
ggplot(penguins,  # data layer
aes(x = body_mass_g)) + # aesthetics
geom_density()
data_layer <- ggplot(penguins)
data_layer
data_layer <- ggplot(penguins)
#data_layer
aes_layer <- aes(x = body_mass_g)
data_layer + aes_layer
data_layer <- ggplot(penguins)
#data_layer
aes_layer <- aes(x = body_mass_g)
data_layer + aes_layer + geom_density()
data_layer <- ggplot(penguins)
#data_layer
aes_layer <- aes(x = body_mass_g)
data_layer + aes_layer + geom_histogram()
data_layer <- ggplot(penguins)
#data_layer
aes_layer <- aes(x = body_mass_g)
data_layer + aes_layer + geom_histogram() + geom_rug()
data_layer <- ggplot(penguins)
#data_layer
aes_layer <- aes(x = body_mass_g, color = species)
data_layer + aes_layer + geom_density() + geom_rug()
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_density() +
geom_rug()
my_plot <-
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_density() +
geom_rug()
my_plot <-
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_density() +
geom_rug()
my_plot
my_plot + theme_classic()
install.packages("wesanderson")
my_plot + theme_minimal()
my_plot + theme_tidybayes()
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_histogram()
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
geom_histogram()
my_plot + scale_color_brewer(palette = "Dark2")
my_plot + scale_color_brewer(palette = "Dark2") + theme_classic()
my_plot + scale_color_brewer(palette = "Pastel1") + theme_classic()
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(~species)
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(~species, ncol = 1)
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(species), ncol = 1)
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(species, sex), ncol = 2)
ggplot(penguins, aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(~species + sex, ncol = 2)
penguins |>
filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(~species + sex, ncol = 2)
penguins |>
filter(!is.na(sex)) #|>
penguins #|>
#filter(!is.na(sex)) #|>
#ggplot(aes(x = body_mass_g, fill = species)) +
#geom_histogram() +
#facet_wrap(~species + sex, ncol = 2)
penguins |>
filter(!is.na(as.character(sex)))
penguins |>
filter(!is.na(sex))
penguins$sex
penguins |>
dplyr::filter(!is.na(sex))
#ggplot(aes(x = body_mass_g, fill = species)) +
#geom_histogram() +
#facet_wrap(~species + sex, ncol = 2)
?filter
filter
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(~species + sex, ncol = 2)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 2)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations")
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species")
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library")
my_colors <- list(
scale_color_brewer(palette = "Pastel1"),
scale_fill_brewer(palette = "Pastel1")
)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library") +
my_colors
my_colors <- list(
scale_color_brewer(palette = "Dark2"),
scale_fill_brewer(palette = "Dark2")
)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library") +
my_colors
ggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm, color = species)) +
geom_point() +
my_colors
my_palette <- "Pastel1"
my_colors <- list(
scale_color_brewer(palette = my_palette),
scale_fill_brewer(palette = my_palette)
)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library") +
my_colors
my_palette <- "Dark2"
my_colors <- list(
scale_color_brewer(palette = my_palette),
scale_fill_brewer(palette = my_palette)
)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library") +
my_colors
ggplot(penguins, aes(x = body_mass_g, y = flipper_length_mm, color = species)) +
geom_point() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
geom_point() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
geom_point() +
coord_equal() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
geom_point() +
#coord_equal() +
coord_fixed(ratio=2) +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
geom_point() +
#coord_equal() +
coord_fixed(ratio=0.5) +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
geom_point() +
scale_y_log10() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
geom_point() +
scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm, color = species)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
lims(x = c(0, 25), y = c(0,60))
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
lims(x = c(0, 25), y = c(0,60)) +
geom_smooth() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
lims(x = c(20, 25), y = c(55,60)) +
geom_smooth() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
#lims(x = c(20, 25), y = c(55,60)) +
geom_smooth() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
lims(x = c(15, 20), y = c(40,50)) +
geom_smooth() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
#lims(x = c(15, 20), y = c(40,50)) +
coord_cartesian(xlim = c(15, 20), ylim = c(40,50)) +
geom_smooth() +
my_colors
library(ggplot2)
library(ggdist) # nice distributional plots
library(ggtext) # useful for text formatting
library(patchwork) # laying out sub-figures
library(RColorBrewer) # color palettes
library(palmerpenguins)  # easy access to the penguins data
View(penguins)
ggplot(penguins,  # data layer
aes(x = body_mass_g)) + # aesthetics
geom_density()  # geometry
data_layer <- ggplot(penguins)
#data_layer
aes_layer <- aes(x = body_mass_g, color = species)
data_layer + aes_layer + geom_density() + geom_rug()
my_plot <-
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_density() +
geom_rug()
my_plot + scale_color_brewer(palette = "Pastel1") + theme_classic()
my_palette <- "Dark2"
my_colors <- list(
scale_color_brewer(palette = my_palette),
scale_fill_brewer(palette = my_palette)
)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library") +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
#lims(x = c(20, 25), y = c(55,60)) +
geom_smooth() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
#lims(x = c(15, 20), y = c(40,50)) +
coord_cartesian(xlim = c(15, 20), ylim = c(40,50)) +
geom_smooth() +
my_colors
my_palette <- "Dark2"
my_colors <- list(
scale_color_brewer(palette = my_palette),
scale_fill_brewer(palette = my_palette)
)
penguins |>
filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library") +
my_colors
library(ggplot2)
#library(ggdist) # nice distributional plots
#library(ggtext) # useful for text formatting
#library(patchwork) # laying out sub-figures
library(RColorBrewer) # color palettes
library(palmerpenguins)  # easy access to the penguins data
# uncomment if you want o review the penguins data set in
# the spreadsheet viewer
# View(penguins)
ggplot(penguins,  # data layer
aes(x = body_mass_g)) + # aesthetics
geom_density()  # geometry
data_layer <- ggplot(penguins)
#data_layer
aes_layer <- aes(x = body_mass_g, color = species)
data_layer + aes_layer + geom_density() + geom_rug()
my_plot <-
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_density() +
geom_rug()
my_plot + scale_color_brewer(palette = "Pastel1") + theme_classic()
my_palette <- "Dark2"
my_colors <- list(
scale_color_brewer(palette = my_palette),
scale_fill_brewer(palette = my_palette)
)
penguins |>
dplyr::filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library") +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
#lims(x = c(20, 25), y = c(55,60)) +
geom_smooth() +
my_colors
ggplot(penguins, aes(x = bill_depth_mm, y = bill_length_mm)) +
geom_point() +
#scale_y_sqrt() +
#coord_equal() +
#coord_fixed(ratio=0.5) +
#lims(x = c(15, 20), y = c(40,50)) +
coord_cartesian(xlim = c(15, 20), ylim = c(40,50)) +
geom_smooth() +
my_colors
penguins$sex
my_palette <- "Dark2"
my_colors <- list(
scale_color_brewer(palette = my_palette),
scale_fill_brewer(palette = my_palette)
)
penguins |>
filter(!is.na(sex)) |>
ggplot(aes(x = body_mass_g, fill = species)) +
geom_histogram() +
facet_wrap(vars(sex, species), ncol = 3) +
labs(x = "Body Mass (g)", y = "# Observations",
title = "Distribution of penguin body mass by sex and species",
caption = "Data from Palmer Penguins library") +
my_colors
