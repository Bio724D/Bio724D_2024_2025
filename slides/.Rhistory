data = filter(spellman_long, gene == "YAR018C"),
color = "Red", size = 1,alpha=0.5) +
facet_wrap(~ expt, scales = "free_x") +
labs(title = "Genes strongly positively  correlated with YAR018C",
subtitle = "YAR018C shown in red",
x = "Time (mins)", y = "Expression")
theme(legend.position = "none")
#| fig-width: 8
#| fig-height: 8
spellman_long |>
filter(gene %in% pos.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
geom_line(aes(x = time, y = expression),
data = filter(spellman_long, gene == "YAR018C"),
color = "Red", size = 1,alpha=0.5) +
facet_wrap(~ expt, scales = "free_x") +
labs(title = "Genes strongly positively  correlated with YAR018C",
subtitle = "YAR018C shown in red",
x = "Time (mins)", y = "Expression")
theme(legend.position = "none")
#| fig-width: 5
#| fig-height: 5
spellman_long |>
filter(gene %in% pos.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
geom_line(aes(x = time, y = expression),
data = filter(spellman_long, gene == "YAR018C"),
color = "Red", size = 1,alpha=0.5) +
facet_wrap(~ expt, scales = "free_x") +
labs(title = "Genes strongly positively  correlated with YAR018C",
subtitle = "YAR018C shown in red",
x = "Time (mins)", y = "Expression")
theme(legend.position = "none")
library(tidyverse)
library(patchwork)
# the file path may differ on your computer
spellman <- read_tsv("~/Downloads/spellman-1998-expression.tsv")
dim(spellman)
spellman <-
spellman |>
rename(gene = "...1")
# drop the alpha column keeping all others
spellman_clean <-
spellman |>
select(-alpha)
# is.na returns a logical (Boolean) vector
is.na(spellman$alpha0) |>
head(10)
# count the number of NA values in a vector
sum(is.na(spellman$alpha0))
# are all values NA? should return FALSE
all(is.na(spellman$alpha0))
# another test -- this one should return TRUE
all(is.na(spellman$elu))
# custom function of te
all.na <- function(x) {
all(is.na(x))
}
spellman_clean <-
spellman |>
select(-where(all.na))  # note negation
dim(spellman_clean) # note number of columns has been reduced
# using an "inline" definition of our predicate function
spellman |>
select(-where( ~ all(is.na(.x))))  |>
names()
spellman_clean <-
spellman_clean |>
select(-matches("cln3")) |>
select(-matches("clb2"))
spellman_clean <-
spellman_clean |>
select(-matches("cln3|clb2"))
spellman_long <-
spellman_clean |>
pivot_longer(cols = !gene,
names_to = "expt.and.time",
values_to = "expression")
head(spellman_long)
dim(spellman_clean)  # for comparison
dim(spellman_long)
spellman_long <-
spellman_long |>
mutate(expt.and.time = str_replace(expt.and.time, "alpha", "alpha_")) |>
mutate(expt.and.time = str_replace(expt.and.time, "elu", "elu_"))
unique(spellman_long$expt.and.time)
spellman_long <-
spellman_long |>
separate_wider_delim(
cols = expt.and.time,     # column we're extracting from
delim = "_",
names = c("expt", "time") # new names
) |>
mutate(time = as.integer(time))  # convert new time column to integer
spellman_long |>
filter(expt == "alpha", gene == "YAL022C") |>
ggplot(aes(x = time, y = expression)) +
geom_line() +
labs(x = "Time (mins)", y = "Expression of YAL022C")
genes.of.interest <- c("YAL022C", "YAR018C", "YGR188C")
spellman_long |>
filter(gene %in% genes.of.interest, expt == "alpha") |>
ggplot(aes(x = time, y = expression, color = gene)) +
geom_line() +
labs(x = "Time (mins)", y = "Normalized expression",
title = "Expression of multiple genes\nfollowing synchronization by alpha factor")
spellman_long |>
filter(gene %in% genes.of.interest) |>
ggplot(aes(x = time, y = expression, color = gene)) +
geom_line() +
facet_wrap(~ expt) +
labs(x = "Time (mins)", y = "Normalized expression",
title = "Expression of Multiple Genes\nAcross experiments")
spellman_long |>
filter(gene %in% genes.of.interest) |>
ggplot(aes(x = time, y = expression, color = gene)) +
geom_line() +
facet_wrap(~ expt, scales = "free_x") +
labs(x = "Time (mins)", y = "Normalized expression",
title = "Expression of Multiple Genes\nAcross experiments")
by.variance <-
spellman_long |>
group_by(gene) |>
summarize(expression.var = var(expression, na.rm = TRUE)) |>
arrange(desc(expression.var))
head(by.variance)
by.avg.variance <-
spellman_long |>
group_by(gene, expt) |>
summarize(expression.var = var(expression, na.rm = TRUE)) |>
group_by(gene) |>
summarize(avg.expression.var = mean(expression.var))
head(by.avg.variance)
top.genes.1k <-
by.avg.variance |>
slice_max(avg.expression.var, n = 1000) |>
pull(gene)
head(top.genes.1k)
spellman_1k <-
spellman_long |>
filter(gene %in% top.genes.1k)
spellman_wide <-
spellman_long |>
pivot_wider(names_from = gene, values_from = expression)
dim(spellman_wide)
spellman_wide[1:5, 1:8]
two.gene.plot <-
spellman_wide |>
drop_na(YAR018C, YAL022C) |>  # move time points where either variable is NA
ggplot(aes(x = YAR018C, y = YAL022C)) +
geom_point() +
theme(aspect.ratio = 1)
two.gene.plot
two.gene.plot + facet_wrap(~expt, nrow = 2, ncol = 2)
spellman_wide |>
drop_na(YAR018C, YAL022C) |>
summarize(cor = cor(YAR018C, YAL022C))
spellman_wide %>%
drop_na(YAR018C, YAL022C) |>
group_by(expt) |>
summarize(cor = cor(YAR018C, YAL022C))
spellman_1k_wide <-
spellman_1k |>
pivot_wider(names_from = gene, values_from = expression)
gene_correlations <-
spellman_1k_wide |>
select(-expt, -time)  |> # drop expt and time
cor(use = "pairwise.complete.obs")
dim(gene_correlations)
#| fig-width: 5
#| fig-height: 5
spellman_1k |>
filter(gene %in% pos.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
geom_line(aes(x = time, y = expression),
data = filter(spellman_long, gene == "YAR018C"),
color = "Red", size = 1,alpha=0.5) +
facet_wrap(~ expt, scales = "free_x") +
labs(title = "Genes strongly positively  correlated with YAR018C",
subtitle = "YAR018C shown in red",
x = "Time (mins)", y = "Expression")
theme(legend.position = "none")
spellman_1k |>
filter(gene %in% neg.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
theme(legend.position = "none")
spellman_1k |>
filter(gene %in% neg.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
facet_wrap(~ expt, scales = "free_x") +
theme(legend.position = "none")
pos.corr.df <-
spellman_1k |>
filter(gene %in% pos.corr.YAR018C) |>
mutate(corr.with.YAR018C = "positive")
neg.corr.df <-
spellman_1k |>
filter(gene %in% neg.corr.YAR018C) |>
mutate(corr.with.YAR018C = "negative")
combined.pos.neg <- rbind(pos.corr.df, neg.corr.df)
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.25) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("blue", "red"))  +
labs(title = "Genes strongly positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~corr.with.YAR018C, nrow=1)
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.25) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("blue", "red"))  +
labs(title = "Genes strongly positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~expt)
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.25) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("blue", "red"))  +
labs(title = "Genes strongly positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x")
library(tidyverse)
library(patchwork)
# the file path may differ on your computer
spellman <- read_tsv("~/Downloads/spellman-1998-expression.tsv")
dim(spellman)
spellman <-
spellman |>
rename(gene = "...1")
# drop the alpha column keeping all others
spellman_clean <-
spellman |>
select(-alpha)
# is.na returns a logical (Boolean) vector
is.na(spellman$alpha0) |>
head(10)
# count the number of NA values in a vector
sum(is.na(spellman$alpha0))
# are all values NA? should return FALSE
all(is.na(spellman$alpha0))
# another test -- this one should return TRUE
all(is.na(spellman$elu))
# custom function of te
all.na <- function(x) {
all(is.na(x))
}
spellman_clean <-
spellman |>
select(-where(all.na))  # note negation
dim(spellman_clean) # note number of columns has been reduced
# using an "inline" definition of our predicate function
spellman |>
select(-where( ~ all(is.na(.x))))  |>
names()
spellman_clean <-
spellman_clean |>
select(-matches("cln3")) |>
select(-matches("clb2"))
spellman_clean <-
spellman_clean |>
select(-matches("cln3|clb2"))
spellman_long <-
spellman_clean |>
pivot_longer(cols = !gene,
names_to = "expt.and.time",
values_to = "expression")
head(spellman_long)
dim(spellman_clean)  # for comparison
dim(spellman_long)
spellman_long <-
spellman_long |>
mutate(expt.and.time = str_replace(expt.and.time, "alpha", "alpha_")) |>
mutate(expt.and.time = str_replace(expt.and.time, "elu", "elu_"))
unique(spellman_long$expt.and.time)
spellman_long <-
spellman_long |>
separate_wider_delim(
cols = expt.and.time,     # column we're extracting from
delim = "_",
names = c("expt", "time") # new names
) |>
mutate(time = as.integer(time))  # convert new time column to integer
spellman_long |>
filter(expt == "alpha", gene == "YAL022C") |>
ggplot(aes(x = time, y = expression)) +
geom_line() +
labs(x = "Time (mins)", y = "Expression of YAL022C")
genes.of.interest <- c("YAL022C", "YAR018C", "YGR188C")
spellman_long |>
filter(gene %in% genes.of.interest, expt == "alpha") |>
ggplot(aes(x = time, y = expression, color = gene)) +
geom_line() +
labs(x = "Time (mins)", y = "Normalized expression",
title = "Expression of multiple genes\nfollowing synchronization by alpha factor")
spellman_long |>
filter(gene %in% genes.of.interest) |>
ggplot(aes(x = time, y = expression, color = gene)) +
geom_line() +
facet_wrap(~ expt) +
labs(x = "Time (mins)", y = "Normalized expression",
title = "Expression of Multiple Genes\nAcross experiments")
spellman_long |>
filter(gene %in% genes.of.interest) |>
ggplot(aes(x = time, y = expression, color = gene)) +
geom_line() +
facet_wrap(~ expt, scales = "free_x") +
labs(x = "Time (mins)", y = "Normalized expression",
title = "Expression of Multiple Genes\nAcross experiments")
by.variance <-
spellman_long |>
group_by(gene) |>
summarize(expression.var = var(expression, na.rm = TRUE)) |>
arrange(desc(expression.var))
head(by.variance)
by.avg.variance <-
spellman_long |>
group_by(gene, expt) |>
summarize(expression.var = var(expression, na.rm = TRUE)) |>
group_by(gene) |>
summarize(avg.expression.var = mean(expression.var))
head(by.avg.variance)
top.genes.1k <-
by.avg.variance |>
slice_max(avg.expression.var, n = 1000) |>
pull(gene)
head(top.genes.1k)
spellman_1k <-
spellman_long |>
filter(gene %in% top.genes.1k)
spellman_wide <-
spellman_long |>
pivot_wider(names_from = gene, values_from = expression)
dim(spellman_wide)
spellman_wide[1:5, 1:8]
two.gene.plot <-
spellman_wide |>
drop_na(YAR018C, YAL022C) |>  # move time points where either variable is NA
ggplot(aes(x = YAR018C, y = YAL022C)) +
geom_point() +
theme(aspect.ratio = 1)
two.gene.plot
two.gene.plot + facet_wrap(~expt, nrow = 2, ncol = 2)
spellman_wide |>
drop_na(YAR018C, YAL022C) |>
summarize(cor = cor(YAR018C, YAL022C))
spellman_wide %>%
drop_na(YAR018C, YAL022C) |>
group_by(expt) |>
summarize(cor = cor(YAR018C, YAL022C))
spellman_1k_wide <-
spellman_1k |>
pivot_wider(names_from = gene, values_from = expression)
gene_correlations <-
spellman_1k_wide |>
select(-expt, -time)  |> # drop expt and time
cor(use = "pairwise.complete.obs")
dim(gene_correlations)
gene_correlations["YAR018C",1:10]
pos.corr.YAR018C <- rownames(gene_correlations)[gene_correlations["YAR018C",] > 0.6]
length(pos.corr.YAR018C)
#| fig-width: 5
#| fig-height: 5
spellman_1k |>
filter(gene %in% pos.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
geom_line(aes(x = time, y = expression),
data = filter(spellman_long, gene == "YAR018C"),
color = "Red", size = 1,alpha=0.5) +
facet_wrap(~ expt, scales = "free_x") +
labs(title = "Genes strongly positively  correlated with YAR018C",
subtitle = "YAR018C shown in red",
x = "Time (mins)", y = "Expression")
theme(legend.position = "none")
neg.corr.YAR018C <- colnames(gene_correlations)[gene_correlations["YAR018C",] <= -0.6]
spellman_1k |>
filter(gene %in% neg.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
facet_wrap(~ expt, scales = "free_x") +
theme(legend.position = "none")
pos.corr.df <-
spellman_1k |>
filter(gene %in% pos.corr.YAR018C) |>
mutate(corr.with.YAR018C = "positive")
neg.corr.df <-
spellman_1k |>
filter(gene %in% neg.corr.YAR018C) |>
mutate(corr.with.YAR018C = "negative")
combined.pos.neg <- rbind(pos.corr.df, neg.corr.df)
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.25) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("blue", "red"))  +
labs(title = "Genes strongly positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x")
pos.corr.YAR018C <- rownames(gene_correlations)[gene_correlations["YAR018C",] > 0.6]
length(pos.corr.YAR018C)
gene_correlations["YAR018C",1:10]
neg.corr.YAR018C <- colnames(gene_correlations)[gene_correlations["YAR018C",] <= -0.5]
spellman_1k |>
filter(gene %in% neg.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
facet_wrap(~ expt, scales = "free_x") +
theme(legend.position = "none")
spellman_1k |>
filter(gene %in% neg.corr.YAR018C) |>
ggplot(aes(x = time, y = expression, group = gene)) +
geom_line(alpha = 0.33) +
facet_wrap(~ expt, scales = "free_x") +
labs(title = "Genes negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression")  +
theme(legend.position = "none")
pos.corr.df <-
spellman_1k |>
filter(gene %in% pos.corr.YAR018C) |>
mutate(corr.with.YAR018C = "positive")
neg.corr.df <-
spellman_1k |>
filter(gene %in% neg.corr.YAR018C) |>
mutate(corr.with.YAR018C = "negative")
combined.pos.neg <- rbind(pos.corr.df, neg.corr.df)
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.25) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("blue", "red"))  +
labs(title = "Genes positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x")
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.25) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("steelblue", "darkred"))  +
labs(title = "Genes positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x")
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.5) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("steelblue", "darkred"))  +
labs(title = "Genes positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x")
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.75) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("steelblue", "darkred"))  +
labs(title = "Genes positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x")
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.75) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("steelblue", "firebrick"))  +
labs(title = "Genes positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x")
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.75) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("steelblue", "firebrick"))  +
labs(title = "Genes positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x") +
theme_classic()
ggplot(combined.pos.neg,
aes(x = time, y = expression,  group = gene,
color = corr.with.YAR018C)) +
geom_line(alpha=0.5) +
# changes legend title and values for color scale
scale_color_manual(name = "Correlation with YAR018C",
values = c("darkblue", "firebrick"))  +
labs(title = "Genes positively and negatively correlated with YAR018C",
x = "Time (mins)", y = "Expression") +
facet_wrap(~ expt, scales = "free_x")
